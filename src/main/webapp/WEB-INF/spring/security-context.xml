<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- Define AuthTokenProcessingFilter -->
	<beans:bean id="authenticationTokenProcessingFilter"
		class="com.mok.auth.AuthenticationTokenProcessingFilter">
	</beans:bean>

	<!-- Define unAuthorizedEntryPoint for 401 Error -->
	<beans:bean id="unauthorizedEntryPoint" class="com.mok.auth.UnauthorizedEntryPoint" />

	<!-- Configuration for Authorization -->
	<http auto-config="false" use-expressions="true" create-session="stateless"
		entry-point-ref="unauthorizedEntryPoint">
		<custom-filter ref="authenticationTokenProcessingFilter"
			before="FORM_LOGIN_FILTER" />
		<intercept-url pattern="/auth/login" access="permitAll" />
		<intercept-url pattern="/auth/register" access="permitAll" />
		<intercept-url pattern="/**" access="isAuthenticated()" />
		<!-- <http-basic/> -->
		<!-- <intercept-url pattern="/heheh" access="hasIpAddress(1.1.1.1)" requires-channel="https"/> -->
		<!-- <form-login username-parameter="user_id" password-parameter="udid" 
			login-processing-url="/authenticate" /> -->
	</http>	

	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT UserId , UDID, 'true' FROM Account WHERE UserId = ?"
				authorities-by-username-query="SELECT UserId, 'ROLE_ADMIN' FROM Account WHERE UserId = ?" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>